RequestCounterFilter
LoginServlet

//전처리(요청이 요청을 처리할 서블릿으로 가기전)
chain.doFilter 기준으로
//후처리(생성된 응답이 클라이언트에게 가는중)

전처리 ==> 서블릿 ==> 후처리

1. RequestCounterFilter 전처리 부분 - chain.doFilter 호출전
2. loginServlet doGet
3. RequestCounterFilter 후처리 부분 - chain.doFilter 호출후

RequestCounterFilter.doFilter()
uri : /login
RequestCounterFilter 전처리 부분 - chain.doFilter 호출전
loginServlet doGet
RequestCounterFilter 후처리 부분 - chain.doFilter 호출후

-------------------------------------------------------------------
Wrapper
int ==> Integer

HttpServletRequest ==> 새로운 객체로 생성
parameter 수정은 HttpServletRequest 객체에서는 불가능

request.getParameter() 메서드는 존재(getter) 
request.setParameter() 메서드는 없음(setter) *****
==> 파라미터를 개발자가 임의로 수정하거나 추가할 수 없다.
  ==> 파라미터를 수정하기 위해서는 
	  HttpServletRequest 객체를 이용하여 새로운 wrapper 클래스를 생성
	  기본 request 객체를 대체..

request.getAttribute() 메서드는 존재(getter)
request.setAttribute() 메서드는 존재(setter)

filter/requestParameter.jsp에서
request.getParameterMap()메서드를 통해 얻은 Map객체에
파라미터를 임의로 추가, 수정하는 작업이 불가능


request.getParameterMap()을 통해 새로운 map 객체를 생성하고
해당 map객체에 필요한 파라미터를 추가, 이후 프로세서에서는 새롭게 만든 map 객체로 전달

1. map객체를 조작할 Filter
2. HttpServletRequest객체를 대신할 wrapper
   HttpServletRequestWrapper 클래스를 상속
   
--------------------------------------------------------------------------------------
event Listener ==> event handler
jquery를 활용하여
버튼이 클릭 되었을 때 특정 로직을 실행 하도록 event handler 등록
	$("#btn").on("click",function(){
	});

web.scml에 리스너 등록

서버에도 감지할수 있는 이벤트 종류가 존재
life cycle : scope 객체가 생성되고, 소멸될 때 이벤트 감지
attribute : scope객체에 속성이 추가되거나, 수정, 변경되었을때 이벤트 감지
기타 등등...

				life cycle					attribute
--------------------------------------------------------------------------
request			ServletRequestListener		ServletRequestAttributeListener

session			HttpSessionListener			HttpSessionAttributeListener

application		ServletContextListener		ServletContextAttributeListener


---------------------------------------------------------------------------------
logout 기능 추가
/logout url 요청시

세션에 저장된 속성 제거 : session.invalidate();
응답 화면 : login.jsp

//SessionAttributeListener.attributeRemoved
userMap에서 해당 사용자 정보 삭제
userMap.jsp 에서 로그아웃한 사용자가 안나오는것 확인


































